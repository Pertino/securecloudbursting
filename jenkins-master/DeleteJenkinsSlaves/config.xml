<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jp.ikedam.jenkins.plugins.groovy__label__assignment.GroovyLabelAssignmentProperty plugin="groovy-label-assignment@1.0.0">
      <groovyScript>return &quot;master&quot;</groovyScript>
    </jp.ikedam.jenkins.plugins.groovy__label__assignment.GroovyLabelAssignmentProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>filter</name>
          <description>Filter slaves to delete</description>
          <defaultValue>slave</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.groovy.SystemGroovy plugin="groovy@1.20">
      <scriptSource class="hudson.plugins.groovy.StringScriptSource">
        <command>import jenkins.model.*
import hudson.model.*
import hudson.slaves.*
  
// Retrieve parameters of the current build
def filter = build.buildVariableResolver.resolve(&quot;filter&quot;)
println &quot;Delete Filter = $filter&quot;

nodes = Jenkins.instance.getNodes()
out.println nodes
Iterator&lt;hudson.model.Node&gt; i = nodes.iterator();
while (i.hasNext()) {
    Node obj = i.next();
    if (obj.getNodeName().count(&quot;slave&quot;) &gt; 0)
    {
      if (obj.getNodeName().count(&quot;$filter&quot;) &gt; 0)
        {
            Jenkins.instance.removeNode(obj);
        }
    }
}</command>
      </scriptSource>
      <bindings></bindings>
      <classpath></classpath>
    </hudson.plugins.groovy.SystemGroovy>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
cat &gt; .dynamicMachine &lt;&lt;EOF
{
    &quot;DigitalOcean&quot; : {
        &quot;Client ID&quot;          : &quot;&lt;yourClientId&gt;&quot;,
        &quot;API Key&quot;            : &quot;&lt;yourApiKey&gt;&quot;
    },
    &quot;BaseHostName&quot;: &quot;auto&quot;
}
EOF

set +x
echo &quot;--------------------------------------------------------------------------------------------------- Delete Digital Cloud Slaves&quot;
set -x
if [ &quot;$filter&quot; = &quot;&quot; ]; then
  echo &quot;Delete All&quot;
  delete_machines.py
else
  echo &quot;Delete $filter machines&quot; 
  delete_machines.py --filter ${filter}
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
